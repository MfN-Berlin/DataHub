openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/dataset/:
    get:
      operationId: listDatasets
      description: ''
      parameters:
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page[number]=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page[number]=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dataset'
          description: ''
      tags:
      - api
    post:
      operationId: createDataset
      description: ''
      parameters: []
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
      tags:
      - api
  /api/dataset/{id}/:
    get:
      operationId: retrieveDataset
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dataset.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
      tags:
      - api
    put:
      operationId: updateDataset
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dataset.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateDataset
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dataset.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyDataset
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dataset.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/report/:
    get:
      operationId: listReports
      description: ''
      parameters:
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page[number]=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page[number]=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - api
    post:
      operationId: createReport
      description: ''
      parameters: []
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - api
  /api/report/{id}/:
    get:
      operationId: retrieveReport
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this report.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - api
    put:
      operationId: updateReport
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this report.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateReport
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this report.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyReport
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this report.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/origin/:
    get:
      operationId: listOrigins
      description: ''
      parameters:
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page[number]=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page[number]=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Origin'
          description: ''
      tags:
      - api
    post:
      operationId: createOrigin
      description: ''
      parameters: []
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Origin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Origin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Origin'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Origin'
          description: ''
      tags:
      - api
  /api/origin/{id}/:
    get:
      operationId: retrieveOrigin
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this origin.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Origin'
          description: ''
      tags:
      - api
    put:
      operationId: updateOrigin
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this origin.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Origin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Origin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Origin'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Origin'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOrigin
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this origin.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Origin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Origin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Origin'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Origin'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyOrigin
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this origin.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/user/:
    get:
      operationId: listUsers
      description: ''
      parameters:
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page[number]=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page[number]=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/user/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/odkimport/{params}/:
    post:
      operationId: createODKImport
      description: ''
      parameters:
      - name: params
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema: {}
          description: ''
      tags:
      - api
  /api/sambaexport/{id}/:
    post:
      operationId: createSambaExport
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema: {}
          description: ''
      tags:
      - api
  /api/easydbexport/{id}/:
    post:
      operationId: createEasydbExport
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema: {}
          description: ''
      tags:
      - api
  /api/picturaeexport/{id}/:
    post:
      operationId: createPicturaeExport
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema: {}
          description: ''
      tags:
      - api
components:
  schemas:
    Dataset:
      type: object
      properties:
        datetime:
          type: string
          format: date-time
        CSV:
          type: string
          format: binary
          nullable: true
        files:
          type: string
          nullable: true
          description: 'Provide a path from the shared "digi1" directory: e.g. /digi1/11_Picturae/01_delivered'
          maxLength: 1000
        origin_id:
          type: string
          readOnly: true
        params:
          type: string
          nullable: true
          description: The directory name of the dataset that holds the records.
          maxLength: 1000
        flag:
          type: boolean
    Report:
      type: object
      properties:
        user:
          type: string
          nullable: true
          description: The user who does the operation.
        dataset:
          type: string
          nullable: true
          description: The Exported Dataset
        report_type:
          type: string
          nullable: true
          description: Type of the Report
        datetime:
          type: string
          format: date-time
        flag:
          type: boolean
        comment:
          type: string
          nullable: true
    Origin:
      type: object
      properties:
        title:
          type: string
          maxLength: 1000
      required:
      - title
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: string
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
      required:
      - username
